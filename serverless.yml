service: mastonpin-mastodon-to-pinboard

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations
      
provider:
  name: aws
  runtime: nodejs16.x
  environment:
    DYNAMODB_TABLE: ${self:service}-${sls:stage}
    MASTOPIN_PINBOARD_APIKEY: ${file(./mastopin.env.yml):dev.MASTOPIN_PINBOARD_APIKEY}
    MASTOPIN_MASTODON_URL: ${file(./mastopin.env.yml):dev.MASTOPIN_MASTODON_URL}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  check:
    handler: check.check
    events:
      - http:
          path: /
          method: get
          cors: true
  cron:
    handler: check.check
    events:
      # Invoke Lambda function every hour
      - schedule: rate(1 hour)
resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
